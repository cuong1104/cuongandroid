{"name":"CuongAndroid","tagline":"Android library with many future (will be update)","body":"#cuongandroid\r\nAndroid library with many future\r\n##1, CustomDialog\r\nA custom dialog library very easy to use. It like a fragment or activity... You can do anything you want\r\n###How to use\r\n    CustomDialog dialog = new CustomDialog(context);\r\n    dialog.initDialog(mView, R.id.ivClose, R.id.vContent);\r\n\r\nWith:\r\n\r\n* mView: A view(may Inflater from layout), you can add event for the    compoment on this layout. \r\n* R.id.ivClose: Id of comoment on mView, use    to close dialog (like close button, etc...). You can put 0 at this.    \r\n* R.id.vContent: Id of content view. You can put 0 at this.\r\n\r\nCall: `dialog.show()`\r\nTo show dialog.\r\n\r\nCall: `dialog.dismiss()`\r\nTo close dialog.\r\n\r\nAnd more ...\r\n\r\n##2, SMS/MMS Backup/Restore\r\nAllow you backup and restore all SMS and MMS in android device. Also, you can delete all SMS or MMS.\r\n\r\nSome diffrent future like backup from time, you can choose where to save file backup.\r\n\r\n###How to use\r\n\r\n1, Get all SMS and MMS\r\n\r\n    ArrayList<SMSEntity> listSms = SMSUtils.getAllSms(context);\r\n    ArrayList<MMSEntity> listMms = SMSUtils.getAllSmsBefore(context, calender.getTimeInMillis());\r\n    ArrayList<MMSEntity> listMms = MMSUtils.getAllMms(context);\r\n\r\n2, Set ProgressBar and TextView\r\n\r\n    XmlUtils.pbBackup = pbBackup;\r\n    XmlUtils.tvBackup = tvProgressBackup;\r\n\r\nYou can edit if not want to use.\r\n\r\n3, Set Path save\r\n\r\nBydefault, it will create a folder smsbackup automatical. You can change by:\r\n\r\n    XmlUtils.pathSave = Environment.getExternalStorageDirectory()+ File.separator + \"SMSBackup\";\r\n\r\n3, Set On Backup Finish\r\n\r\n    XmlUtils.OnFinishBackup finish = new XmlUtils.OnFinishBackup() { \r\n    \t@Override public void onFinish() { \r\n    \t\tDeviceUtils.showMessage(context, \"Backup completed!\"); \r\n    \t\t} \r\n    \t}; \r\n\r\n    XmlUtils.BackupSMS(fileName, listSms, listMms, finish);\r\n\r\n4, Restore\r\n\r\nSet ProgressBar: `XmlUtils.pbRestore = pbRestore;`\r\n\r\nSet Button Restore: `XmlUtils.btnRestore = btnRestore;` need to lock it while restoring\r\n\r\nSet TextView: `XmlUtils.tvProgressRestore = tvProgressRestore;` to show progress ex: 12/222\r\n\r\nRestore: `XmlUtils.RestoreSMS(context, pathBackup, merger);`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}